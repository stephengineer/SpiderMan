{"remainingRequest":"/Users/zq/GIts/spider/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zq/GIts/spider/src/components/home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zq/GIts/spider/src/components/home.vue","mtime":1564120738726},{"path":"/Users/zq/GIts/spider/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zq/GIts/spider/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/zq/GIts/spider/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zq/GIts/spider/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport vis from 'vis'\r\nimport 'vis/dist/vis.css'\r\nconst _ = require('lodash')\r\nconst YTPlayer = require('yt-player')\r\nvar player = null\r\nvar timelineTemplate = _.template('<%= date %> <%= hour %>:<%= minute %>:<%= second %>')\r\nvar lessonsTimeline = [\r\n  { id: 'fYMQ7toJwQ0', timeline: null },\r\n  { id: 'iVe6Yx31V-w', timeline: null },\r\n  { id: 'sknsduLepYc', timeline: null }\r\n]\r\n\r\nexport default {\r\n  mounted() {\r\n    this.lessonTitle = this.lessons[0].title\r\n    this.lessonId = this.lessons[0].id\r\n    this.previousLessonId = this.lessons[0].id\r\n    this.lessons[0].timeline = true\r\n    player = new YTPlayer(\"#lessonPlayer\")\r\n    this.loadVideo(this.lessons[0].id)\r\n    this.lessons.forEach(lesson =>{\r\n      this.createTimeline(lesson)\r\n    })\r\n  },\r\n  data: () => ({\r\n    enterButtonLabel: 'Start',\r\n    homePage: true,\r\n    sidePanel: true,\r\n    lessonTitle: '',\r\n    lessonId: '',\r\n    previousLessonId: '',\r\n    lessons: [\r\n      { title: 'Humans', bookmark: false, id: 'fYMQ7toJwQ0', timeline: false },\r\n      { title: 'Computers', bookmark: false, id: 'iVe6Yx31V-w', timeline: false },\r\n      { title: 'Interaction', bookmark: false, id: 'sknsduLepYc', timeline: false }\r\n    ],\r\n    coding: false,\r\n    language: 'Python',\r\n    languages: [\r\n      'C++',\r\n      'Java',\r\n      'JS',\r\n      'Python'\r\n    ],\r\n    todayDate: ''\r\n  }),\r\n  methods: {\r\n    /**\r\n      * @description select lesson on the lessons list\r\n      * @param {object} lesson object of lesson\r\n      */\r\n    clickLesson: function (lesson) {\r\n      this.lessonTitle = lesson.title\r\n      this.previousLessonId = this.lessonId\r\n      this.lessonId = lesson.id\r\n      player.destroy()\r\n      this.loadVideo()\r\n      this.loadTimeline()\r\n    },\r\n    /**\r\n      * @description load the YouTube video to player element\r\n      */\r\n    loadVideo: function () {\r\n      player = new YTPlayer('#lessonPlayer', {\r\n        height: '600',\r\n        width: '100%',\r\n        related: false\r\n      })\r\n      player.load(this.lessonId)\r\n    },\r\n    /**\r\n      * @description create custom time on timeline\r\n      */\r\n    createCustomTime: function () {\r\n      // set timeline window\r\n      var videoTotalSeconds = Math.ceil(player.getDuration()) // in seconds\r\n      var lessonTimelineObj = lessonsTimeline.find(lessonTimeline => lessonTimeline.id === this.lessonId)\r\n      var videoMinute = parseInt(videoTotalSeconds / 60, 10)\r\n      var videoSecond = parseInt(videoTotalSeconds % 60, 10) + 5\r\n      videoMinute = videoMinute < 10 ? \"0\" + videoMinute : videoMinute\r\n      videoSecond = videoSecond < 10 ? \"0\" + videoSecond : videoSecond\r\n      lessonTimelineObj.timeline.setWindow(\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": \"00\", \"second\": \"00\"})),\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": videoMinute, \"second\": videoSecond})),\r\n        { animation: true })\r\n      // add custom time on timeline\r\n      var currentSeconds = Math.ceil(player.getCurrentTime()) // in seconds\r\n      var currentMinute = parseInt(currentSeconds / 60, 10)\r\n      var currentSecond = parseInt(currentSeconds % 60, 10)\r\n      lessonTimelineObj.timeline.addCustomTime(\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": currentMinute, \"second\": currentSecond})),\r\n        currentSeconds, { editable: false })\r\n    },\r\n    /**\r\n      * @description create timeline for each lesson\r\n      * @param {object} lesson object of lesson\r\n      */\r\n    createTimeline: function (lesson) {\r\n      // DOM element where the Timeline will be attached\r\n      var container = document.getElementById(lesson.id);\r\n      // Create a DataSet (allows two way data-binding)\r\n      var items = new vis.DataSet([]);\r\n      // Configuration for the Timeline\r\n      var today = new Date()\r\n      var yyyy = today.getFullYear()\r\n      var mm = today.getMonth() + 1 // As January is 0\r\n      var dd = today.getDate()\r\n      dd = dd < 10 ? \"0\" + dd : dd\r\n      mm = mm < 10 ? \"0\" + mm : mm\r\n      this.todayDate = yyyy + \"-\" + mm + \"-\" + dd\r\n      // Configuration for the Timeline\r\n      var options = {\r\n        showCurrentTime: false,\r\n        moveable: false,\r\n        min: timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": \"00\", \"second\": \"00\"}),\r\n        max: timelineTemplate({\"date\": this.todayDate, \"hour\": \"01\", \"minute\": \"00\", \"second\": \"00\"})\r\n      };\r\n      // Create a Timeline\r\n      var lessonTimelineObj = lessonsTimeline.find(lessonTimeline => lessonTimeline.id === lesson.id)\r\n      lessonTimelineObj.timeline = new vis.Timeline(container, items, options)\r\n      // timeline = new vis.Timeline(container, items, options);\r\n    },\r\n    /**\r\n      * @description load timeline for current lesson\r\n      */\r\n    loadTimeline () {\r\n      var preLessonTimelineObj = this.lessons.find(lesson => lesson.id === this.previousLessonId)\r\n      var lessonTimelineObj = this.lessons.find(lesson => lesson.id === this.lessonId)\r\n      preLessonTimelineObj.timeline = false\r\n      lessonTimelineObj.timeline = true\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"home.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <!-- Todo: this container should be removed because I add this instruction page to intruduce project -->\r\n    <v-container v-show=\"homePage\">\r\n      <v-layout align-center justify-center column>\r\n        <span style=\"color: dodgerblue; font-size: 70px;\"> Welcome to Spider Man </span>\r\n        <v-img src=\"../assets/spiderManPeace.png\" class=\"ma-10\"></v-img>\r\n        <v-btn x-large dark rounded color=\"primary\" minWidth=300 minHeight=60 elevation=24 class=\"mb-10\"\r\n          @click=\"homePage=!homePage, enterButtonLabel='Continue'\">{{enterButtonLabel}}\r\n        </v-btn>\r\n        <a href=\"https://github.com/zhongqi1112/spider\"><img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/zhongqi1112/spider?style=social\"></a>\r\n        <v-flex class=\"mt-1\">\r\n          <label><a href=\"https://github.com/zhongqi1112\">Stephen Wang</a></label>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-container>\r\n    <v-container fluid grid-list-md v-show=\"!homePage\" class=\"pa-0\">\r\n      <v-layout row>\r\n        <v-flex sm3 v-show=\"sidePanel\">\r\n          <v-card dark height=\"100%\">\r\n            <v-list>\r\n              <v-layout row>\r\n                <v-tooltip bottom>\r\n                  <template v-slot:activator=\"{ on }\">\r\n                    <v-flex xs2>\r\n                      <v-btn icon v-on=\"on\" @click=\"homePage=!homePage\">\r\n                        <v-icon color=\"error\">home</v-icon>\r\n                      </v-btn>\r\n                    </v-flex>\r\n                  </template>\r\n                  <span>Home Page</span>\r\n                </v-tooltip>\r\n                <label style=\"padding-top:22px\">Lesson {{ lessonTitle }}</label>\r\n              </v-layout>\r\n              <v-list-group prepend-icon=\"menu\" value=\"true\" color=\"light-blue\">\r\n                <template v-slot:activator>\r\n                  <v-list-item-title>Concepts</v-list-item-title>\r\n                </template>\r\n                <v-list-item v-for=\"(lesson, i) in lessons\" :key=\"i\" link>\r\n                  <v-list-item-content @click=\"clickLesson(lesson)\">\r\n                    <v-list-item-title v-text=\"i + 1 + '. ' + lesson.title\"></v-list-item-title>\r\n                  </v-list-item-content>\r\n                  <v-list-item-action>\r\n                    <v-tooltip left>\r\n                      <template v-slot:activator=\"{ on }\">\r\n                        <v-layout justify-space-around>\r\n                          <v-btn icon small v-on=\"on\" @click=\"lesson.bookmark = !lesson.bookmark\">\r\n                            <v-icon :color=\"lesson.bookmark ? 'orange' : 'grey'\">bookmark</v-icon>\r\n                          </v-btn>\r\n                        </v-layout>\r\n                      </template>\r\n                      <span v-if=\"!lesson.bookmark\">Not Bookmarked</span>\r\n                      <span v-if=\"lesson.bookmark\">Bookmarked</span>\r\n                    </v-tooltip>\r\n                  </v-list-item-action>\r\n                </v-list-item>\r\n              </v-list-group>\r\n            </v-list>\r\n          </v-card>\r\n        </v-flex>\r\n        <v-flex class=\"ml-2\">\r\n          <v-toolbar dark>\r\n            <v-tooltip right>\r\n              <template v-slot:activator=\"{ on }\">\r\n                <v-flex xs2>\r\n                  <v-btn icon color=\"light-blue\" v-on=\"on\" @click=\"sidePanel=!sidePanel\">\r\n                    <v-icon>menu</v-icon>\r\n                  </v-btn>\r\n                </v-flex>\r\n              </template>\r\n              <span v-if=\"sidePanel\">Hide Lessons</span>\r\n              <span v-if=\"!sidePanel\">Show Lessons</span>\r\n            </v-tooltip>\r\n            <v-spacer></v-spacer>\r\n            <v-tooltip left>\r\n              <template v-slot:activator=\"{ on }\">\r\n                <v-flex xs2>\r\n                  <v-btn text target=\"_blank\" v-on=\"on\" href=\"https://github.com/zhongqi1112\">\r\n                    <span class=\"mr-2\" style=\"color: dodgerblue;\">Send Feedback</span>\r\n                  </v-btn>\r\n                </v-flex>\r\n              </template>\r\n              <span>Talk to Author</span>\r\n            </v-tooltip>\r\n          </v-toolbar>\r\n          <v-layout column>\r\n            <div id=\"lessonPlayer\"></div>\r\n            <v-layout align-center justify-start row fill-height>\r\n              <span>Coding</span>\r\n              <v-switch\r\n                v-model=\"coding\"\r\n                color=\"primary\"\r\n                :label=\"coding ? 'Yes' : 'No'\"\r\n                class=\"ml-2\"\r\n              ></v-switch>\r\n              <v-flex xs1 class=\"ml-4\">\r\n                <v-select v-model=\"language\" :disabled=\"!coding\" :items=\"languages\" label=\"Lanuage\"></v-select>\r\n              </v-flex>\r\n              <v-spacer></v-spacer>\r\n              <v-tooltip left>\r\n                <template v-slot:activator=\"{ on }\">\r\n                  <div>\r\n                    <v-btn icon v-on=\"on\" @click=\"createCustomTime\">\r\n                      <v-icon color=\"orange\">book</v-icon>\r\n                    </v-btn>\r\n                  </div>\r\n                </template>\r\n                <span>Mark on Timeline</span>\r\n              </v-tooltip>\r\n              <v-flex xs7 v-for=\"(lesson, i) in lessons\" :key=\"i\" v-show=\"lesson.timeline\" class=\"mr-4\">\r\n                <div :id=\"lesson.id\"></div>\r\n              </v-flex>\r\n            </v-layout>\r\n            <v-flex>\r\n              <v-textarea v-show=\"!coding\" filled label=\"Note\"></v-textarea>\r\n              <v-textarea v-show=\"coding\" filled label=\"Code\"></v-textarea>\r\n            </v-flex>\r\n            <v-layout justify-end row class=\"mb-4 mr-4\">\r\n              <v-btn color=\"success\" :disabled=\"!coding\" class=\"mr-4\">Run</v-btn>\r\n              <v-btn color=\"primary\" :disabled=\"!coding\" class=\"mr-4\">Submit</v-btn>\r\n              <v-btn color=\"primary\">Download</v-btn>\r\n            </v-layout>\r\n          </v-layout>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport vis from 'vis'\r\nimport 'vis/dist/vis.css'\r\nconst _ = require('lodash')\r\nconst YTPlayer = require('yt-player')\r\nvar player = null\r\nvar timelineTemplate = _.template('<%= date %> <%= hour %>:<%= minute %>:<%= second %>')\r\nvar lessonsTimeline = [\r\n  { id: 'fYMQ7toJwQ0', timeline: null },\r\n  { id: 'iVe6Yx31V-w', timeline: null },\r\n  { id: 'sknsduLepYc', timeline: null }\r\n]\r\n\r\nexport default {\r\n  mounted() {\r\n    this.lessonTitle = this.lessons[0].title\r\n    this.lessonId = this.lessons[0].id\r\n    this.previousLessonId = this.lessons[0].id\r\n    this.lessons[0].timeline = true\r\n    player = new YTPlayer(\"#lessonPlayer\")\r\n    this.loadVideo(this.lessons[0].id)\r\n    this.lessons.forEach(lesson =>{\r\n      this.createTimeline(lesson)\r\n    })\r\n  },\r\n  data: () => ({\r\n    enterButtonLabel: 'Start',\r\n    homePage: true,\r\n    sidePanel: true,\r\n    lessonTitle: '',\r\n    lessonId: '',\r\n    previousLessonId: '',\r\n    lessons: [\r\n      { title: 'Humans', bookmark: false, id: 'fYMQ7toJwQ0', timeline: false },\r\n      { title: 'Computers', bookmark: false, id: 'iVe6Yx31V-w', timeline: false },\r\n      { title: 'Interaction', bookmark: false, id: 'sknsduLepYc', timeline: false }\r\n    ],\r\n    coding: false,\r\n    language: 'Python',\r\n    languages: [\r\n      'C++',\r\n      'Java',\r\n      'JS',\r\n      'Python'\r\n    ],\r\n    todayDate: ''\r\n  }),\r\n  methods: {\r\n    /**\r\n      * @description select lesson on the lessons list\r\n      * @param {object} lesson object of lesson\r\n      */\r\n    clickLesson: function (lesson) {\r\n      this.lessonTitle = lesson.title\r\n      this.previousLessonId = this.lessonId\r\n      this.lessonId = lesson.id\r\n      player.destroy()\r\n      this.loadVideo()\r\n      this.loadTimeline()\r\n    },\r\n    /**\r\n      * @description load the YouTube video to player element\r\n      */\r\n    loadVideo: function () {\r\n      player = new YTPlayer('#lessonPlayer', {\r\n        height: '600',\r\n        width: '100%',\r\n        related: false\r\n      })\r\n      player.load(this.lessonId)\r\n    },\r\n    /**\r\n      * @description create custom time on timeline\r\n      */\r\n    createCustomTime: function () {\r\n      // set timeline window\r\n      var videoTotalSeconds = Math.ceil(player.getDuration()) // in seconds\r\n      var lessonTimelineObj = lessonsTimeline.find(lessonTimeline => lessonTimeline.id === this.lessonId)\r\n      var videoMinute = parseInt(videoTotalSeconds / 60, 10)\r\n      var videoSecond = parseInt(videoTotalSeconds % 60, 10) + 5\r\n      videoMinute = videoMinute < 10 ? \"0\" + videoMinute : videoMinute\r\n      videoSecond = videoSecond < 10 ? \"0\" + videoSecond : videoSecond\r\n      lessonTimelineObj.timeline.setWindow(\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": \"00\", \"second\": \"00\"})),\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": videoMinute, \"second\": videoSecond})),\r\n        { animation: true })\r\n      // add custom time on timeline\r\n      var currentSeconds = Math.ceil(player.getCurrentTime()) // in seconds\r\n      var currentMinute = parseInt(currentSeconds / 60, 10)\r\n      var currentSecond = parseInt(currentSeconds % 60, 10)\r\n      lessonTimelineObj.timeline.addCustomTime(\r\n        new Date(timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": currentMinute, \"second\": currentSecond})),\r\n        currentSeconds, { editable: false })\r\n    },\r\n    /**\r\n      * @description create timeline for each lesson\r\n      * @param {object} lesson object of lesson\r\n      */\r\n    createTimeline: function (lesson) {\r\n      // DOM element where the Timeline will be attached\r\n      var container = document.getElementById(lesson.id);\r\n      // Create a DataSet (allows two way data-binding)\r\n      var items = new vis.DataSet([]);\r\n      // Configuration for the Timeline\r\n      var today = new Date()\r\n      var yyyy = today.getFullYear()\r\n      var mm = today.getMonth() + 1 // As January is 0\r\n      var dd = today.getDate()\r\n      dd = dd < 10 ? \"0\" + dd : dd\r\n      mm = mm < 10 ? \"0\" + mm : mm\r\n      this.todayDate = yyyy + \"-\" + mm + \"-\" + dd\r\n      // Configuration for the Timeline\r\n      var options = {\r\n        showCurrentTime: false,\r\n        moveable: false,\r\n        min: timelineTemplate({\"date\": this.todayDate, \"hour\": \"00\", \"minute\": \"00\", \"second\": \"00\"}),\r\n        max: timelineTemplate({\"date\": this.todayDate, \"hour\": \"01\", \"minute\": \"00\", \"second\": \"00\"})\r\n      };\r\n      // Create a Timeline\r\n      var lessonTimelineObj = lessonsTimeline.find(lessonTimeline => lessonTimeline.id === lesson.id)\r\n      lessonTimelineObj.timeline = new vis.Timeline(container, items, options)\r\n      // timeline = new vis.Timeline(container, items, options);\r\n    },\r\n    /**\r\n      * @description load timeline for current lesson\r\n      */\r\n    loadTimeline () {\r\n      var preLessonTimelineObj = this.lessons.find(lesson => lesson.id === this.previousLessonId)\r\n      var lessonTimelineObj = this.lessons.find(lesson => lesson.id === this.lessonId)\r\n      preLessonTimelineObj.timeline = false\r\n      lessonTimelineObj.timeline = true\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}